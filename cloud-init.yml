#cloud-config
package_update: false
package_upgrade: false
manage_etc_hosts: false
output: { all: "| tee -a /var/log/cloud-init-output.log" }
final_message: "The system is finally up, after $UPTIME seconds"
#packages:
#  - ipa-server
#  - bind-dyndb-ldap
runcmd:
  - [sh, -lc, "dnf update -y"]
  - [sh, -lc, "dnf install ipa-server bind-dyndb-ldap -y"]
  - - sh
    - -lc
    - |
      GW_IP=$(ip route show default | awk '/default/ {print $3; exit}')
      IFACE=$(ip route show default | awk '/default/ {print $5; exit}')
      if [ -n "$GW_IP" ]; then
        if systemctl list-unit-files | grep -q '^systemd-resolved.service'; then
          echo "Using systemd-resolved to set DNS to $GW_IP"
          mkdir -p /etc/systemd/resolved.conf.d
          printf '%s\n' '[Resolve]' > /etc/systemd/resolved.conf.d/99-gateway-dns.conf
          printf 'DNS=%s\n' "$GW_IP" >> /etc/systemd/resolved.conf.d/99-gateway-dns.conf
          systemctl restart systemd-resolved || true
        elif command -v nmcli >/dev/null 2>&1; then
          echo "Using NetworkManager to set DNS on $IFACE to $GW_IP"
          CONN="$(nmcli -g GENERAL.CONNECTION device show "$IFACE" | head -n1)"
          nmcli connection modify "$CONN" ipv4.ignore-auto-dns yes ipv4.dns "$GW_IP"
          nmcli connection up "$CONN" || systemctl restart NetworkManager || true
        else
          echo "No systemd-resolved or NetworkManager; proceeding with manual resolv.conf"
        fi
        cp /etc/resolv.conf /etc/resolv.conf.bak || true
        printf 'nameserver %s\n' "$GW_IP" > /etc/resolv.conf
      else
        echo "Warning: Could not determine default gateway IP. DNS not configured."
      fi
  - - sh
    - -lc
    - |
      IFACE=$(ip route show default | awk '/default/ {print $5; exit}')
      IPV4=$(ip -4 addr show "$IFACE" | awk '/inet /{print $2}' | cut -d/ -f1 | head -n1)
      IPV6=$(ip -6 addr show "$IFACE" scope global | awk '/inet6 /{print $2}' | cut -d/ -f1 | head -n1)
      FQDN=$(hostname -f 2>/dev/null || hostname)
      HOSTNAME=$(hostname -s 2>/dev/null || hostname)
      cp /etc/hosts /etc/hosts.bak || true
      cat > /etc/hosts <<EOF
      # The following lines are desirable for IPv4 capable hosts
      ${IPV4} ${FQDN} ${HOSTNAME}
      127.0.0.1 ${FQDN} ${HOSTNAME}
      127.0.0.1 localhost.localdomain localhost
      127.0.0.1 localhost4.localdomain4 localhost4

      # The following lines are desirable for IPv6 capable hosts
      ${IPV6:-::1} ${FQDN} ${HOSTNAME}
      ::1 ${FQDN} ${HOSTNAME}
      ::1 localhost.localdomain localhost
      ::1 localhost6.localdomain6 localhost6
      EOF
  - [
      sh,
      -lc,
      "firewall-cmd --permanent --add-service={http,https,dns,freeipa-ldap,freeipa-ldaps,kerberos,kpasswd,ntp}",
    ]
  - [sh, -lc, "firewall-cmd --reload"]
